apiVersion: v1
binaryData:
  dump.rdb: 
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: redis-data
  namespace: music-app
